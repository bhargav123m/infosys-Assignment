{"ast":null,"code":"var _jsxFileName = \"/Users/dattubhargavmedarametla/Desktop/infosys-Assignment/src/containers/App.js\";\nimport React, { Component } from 'react'; //redux\n\nimport { connect } from 'react-redux'; //styles\n\nimport '../styles/App.css'; //components\n\nimport MyListContainer from './MyList.container'; //Actions\n\nimport { requestAPIResponse } from '../actions/apiActions';\nimport { removeFromMylist, addToMylist } from '../actions/userActions'; //Assets\n\nimport { BRAND_LOGO } from '../images/branding';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.requestAPIResponse();\n  }\n\n  handleRemoveFromMyList(removeItem) {\n    let newMyList = [];\n    let _this$state = this.state,\n        recommendations = _this$state.recommendations,\n        mylist = _this$state.mylist;\n    mylist.forEach(eachItem => {\n      if (removeItem.id !== eachItem.id) {\n        newMyList.push(eachItem);\n      } else {\n        recommendations.push(eachItem);\n      }\n    });\n    this.setState({\n      mylist: newMyList\n    });\n  }\n\n  handleAddItemToMyList(addItem) {\n    let newRecommendation = [];\n    let _this$state2 = this.state,\n        recommendations = _this$state2.recommendations,\n        mylist = _this$state2.mylist;\n    recommendations.forEach(eachItem => {\n      if (addItem.id !== eachItem.id) {\n        newRecommendation.push(eachItem);\n      } else {\n        mylist.push(eachItem);\n      }\n\n      this.setState({\n        recommendations: newRecommendation,\n        mylist\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          mylist = _this$props.mylist,\n          recommendations = _this$props.recommendations,\n          removeFromMylist = _this$props.removeFromMylist,\n          addToMylist = _this$props.addToMylist,\n          formatMessage = _this$props.intl.formatMessage;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"netflix logo\",\n      className: \"netflix-txt\",\n      src: BRAND_LOGO,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"RECOMMENDATIONS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(MyListContainer, {\n      mylist: recommendations,\n      hoverMessage: formatMessage({\n        id: 'Add'\n      }),\n      handleModifyMovies: addMovie => addToMylist(addMovie),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"header-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"MY_LIST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(MyListContainer, {\n      mylist: mylist,\n      hoverMessage: formatMessage({\n        id: 'Remove'\n      }),\n      handleModifyMovies: removeMovie => removeFromMylist(removeMovie),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = {\n  requestAPIResponse,\n  addToMylist,\n  removeFromMylist\n};\n\nconst mapStateToProps = ({\n  moviesReducer: {\n    mylist,\n    recommendations\n  }\n}) => ({\n  mylist,\n  recommendations\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(App));","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Desktop/infosys-Assignment/src/containers/App.js"],"names":["React","Component","connect","MyListContainer","requestAPIResponse","removeFromMylist","addToMylist","BRAND_LOGO","FormattedMessage","injectIntl","App","componentDidMount","props","handleRemoveFromMyList","removeItem","newMyList","state","recommendations","mylist","forEach","eachItem","id","push","setState","handleAddItemToMyList","addItem","newRecommendation","render","formatMessage","intl","addMovie","removeMovie","mapDispatchToProps","mapStateToProps","moviesReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n//redux\nimport { connect } from 'react-redux';\n\n//styles\nimport '../styles/App.css';\n\n//components\nimport MyListContainer from './MyList.container';\n\n//Actions\nimport { requestAPIResponse } from '../actions/apiActions';\nimport { removeFromMylist, addToMylist } from '../actions/userActions';\n\n//Assets\nimport { BRAND_LOGO } from '../images/branding';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.requestAPIResponse();\n  }\n\n  handleRemoveFromMyList(removeItem) {\n    let newMyList = [];\n    let { recommendations, mylist } = this.state;\n    mylist.forEach(eachItem => {\n      if (removeItem.id !== eachItem.id) {\n        newMyList.push(eachItem);\n      } else {\n        recommendations.push(eachItem);\n      }\n    });\n\n    this.setState({\n      mylist: newMyList\n    });\n  }\n\n  handleAddItemToMyList(addItem) {\n    let newRecommendation = [];\n    let { recommendations, mylist } = this.state;\n    recommendations.forEach(eachItem => {\n      if (addItem.id !== eachItem.id) {\n        newRecommendation.push(eachItem);\n      } else {\n        mylist.push(eachItem);\n      }\n\n      this.setState({\n        recommendations: newRecommendation,\n        mylist\n      });\n    });\n  }\n\n  render() {\n    const {\n      mylist,\n      recommendations,\n      removeFromMylist,\n      addToMylist,\n      intl: { formatMessage }\n    } = this.props;\n    return (\n      <div className='App'>\n        <div className='header'>\n          <img alt='netflix logo' className='netflix-txt' src={BRAND_LOGO} />\n        </div>\n        <div className='header-text'>\n          <span className='header-text'>\n            <FormattedMessage id='RECOMMENDATIONS' />\n          </span>\n        </div>\n        <MyListContainer\n          mylist={recommendations}\n          hoverMessage={formatMessage({ id: 'Add' })}\n          handleModifyMovies={addMovie => addToMylist(addMovie)}\n        />\n        <div>\n          <span className='header-text'>\n            <FormattedMessage id='MY_LIST' />\n          </span>\n        </div>\n        <MyListContainer\n          mylist={mylist}\n          hoverMessage={formatMessage({ id: 'Remove' })}\n          handleModifyMovies={removeMovie => removeFromMylist(removeMovie)}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  requestAPIResponse,\n  addToMylist,\n  removeFromMylist\n};\n\nconst mapStateToProps = ({ moviesReducer: { mylist, recommendations } }) => ({\n  mylist,\n  recommendations\n});\n\nexport default injectIntl(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(App)\n);\n"]},"metadata":{},"sourceType":"module"}