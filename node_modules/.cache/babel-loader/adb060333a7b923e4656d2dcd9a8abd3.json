{"ast":null,"code":"import { GET_MOVIES_SUCCESS, ADD_TO_MY_LIST, REMOVE_FROM_MY_LIST } from \"../actions/constants\";\nconst defaultState = {\n  mylist: [],\n  recommendations: []\n};\n\nfunction moviesReducer(previousState = defaultState, action) {\n  switch (action.type) {\n    case GET_MOVIES_SUCCESS:\n      {\n        const nextState = Object.assign({}, previousState, action.response);\n        return nextState;\n      }\n\n    case ADD_TO_MY_LIST:\n      {\n        const currentRecommendations = previousState.recommendations;\n        const newRecommendations = [];\n        currentRecommendations.forEach(eachMovie => {\n          if (eachMovie.id !== action.movie.id) {\n            newRecommendations.push(eachMovie);\n          }\n        });\n        return Object.assign({}, previousState, {\n          recommendations: newRecommendations,\n          mylist: [...previousState.mylist, action.movie]\n        });\n      }\n\n    case REMOVE_FROM_MY_LIST:\n      {\n        const currentMylist = previousState.mylist;\n        const newMyList = [];\n        currentMylist.forEach(eachMovie => {\n          if (eachMovie.id !== action.movie.id) {\n            newMyList.push(eachMovie);\n          }\n        });\n        return Object.assign({}, previousState, {\n          recommendations: [...previousState.recommendations, action.movie],\n          mylist: newMyList\n        });\n      }\n\n    default:\n      return previousState;\n  }\n}\n\nexport default moviesReducer;","map":{"version":3,"sources":["/Users/dattubhargavmedarametla/Desktop/infosys-Assignment/src/reducers/moviesReducer.js"],"names":["GET_MOVIES_SUCCESS","ADD_TO_MY_LIST","REMOVE_FROM_MY_LIST","defaultState","mylist","recommendations","moviesReducer","previousState","action","type","nextState","Object","assign","response","currentRecommendations","newRecommendations","forEach","eachMovie","id","movie","push","currentMylist","newMyList"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,cAA7B,EAA6CC,mBAA7C,QAAwE,sBAAxE;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,eAAe,EAAE;AAFE,CAArB;;AAKA,SAASC,aAAT,CAAuBC,aAAa,GAAGJ,YAAvC,EAAqDK,MAArD,EAA6D;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,kBAAL;AAAyB;AACvB,cAAMU,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,aAAlB,EAAiCC,MAAM,CAACK,QAAxC,CAAlB;AACA,eAAOH,SAAP;AACD;;AAED,SAAKT,cAAL;AAAqB;AACnB,cAAMa,sBAAsB,GAAGP,aAAa,CAACF,eAA7C;AACA,cAAMU,kBAAkB,GAAG,EAA3B;AACAD,QAAAA,sBAAsB,CAACE,OAAvB,CAA+BC,SAAS,IAAI;AAC1C,cAAIA,SAAS,CAACC,EAAV,KAAiBV,MAAM,CAACW,KAAP,CAAaD,EAAlC,EAAsC;AACpCH,YAAAA,kBAAkB,CAACK,IAAnB,CAAwBH,SAAxB;AACD;AACF,SAJD;AAKA,eAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EACLL,aADK,EAEL;AACEF,UAAAA,eAAe,EAAEU,kBADnB;AAEEX,UAAAA,MAAM,EAAE,CAAC,GAAGG,aAAa,CAACH,MAAlB,EAA0BI,MAAM,CAACW,KAAjC;AAFV,SAFK,CAAP;AAOD;;AAED,SAAKjB,mBAAL;AAA0B;AACxB,cAAMmB,aAAa,GAAGd,aAAa,CAACH,MAApC;AACA,cAAMkB,SAAS,GAAG,EAAlB;AACAD,QAAAA,aAAa,CAACL,OAAd,CAAsBC,SAAS,IAAI;AACjC,cAAIA,SAAS,CAACC,EAAV,KAAiBV,MAAM,CAACW,KAAP,CAAaD,EAAlC,EAAsC;AACpCI,YAAAA,SAAS,CAACF,IAAV,CAAeH,SAAf;AACD;AACF,SAJD;AAMA,eAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EACLL,aADK,EAEL;AACEF,UAAAA,eAAe,EAAE,CAAC,GAAGE,aAAa,CAACF,eAAlB,EAAmCG,MAAM,CAACW,KAA1C,CADnB;AAEEf,UAAAA,MAAM,EAAEkB;AAFV,SAFK,CAAP;AAOD;;AAED;AACE,aAAOf,aAAP;AA1CJ;AA4CD;;AAED,eAAeD,aAAf","sourcesContent":["import { GET_MOVIES_SUCCESS, ADD_TO_MY_LIST, REMOVE_FROM_MY_LIST } from \"../actions/constants\"\nconst defaultState = {\n  mylist: [],\n  recommendations: []\n}\n\nfunction moviesReducer(previousState = defaultState, action) {\n  switch (action.type) {\n    case GET_MOVIES_SUCCESS: {\n      const nextState = Object.assign({}, previousState, action.response)\n      return nextState\n    }\n\n    case ADD_TO_MY_LIST: {\n      const currentRecommendations = previousState.recommendations\n      const newRecommendations = []\n      currentRecommendations.forEach(eachMovie => {\n        if (eachMovie.id !== action.movie.id) {\n          newRecommendations.push(eachMovie)\n        }\n      })\n      return Object.assign({},\n        previousState,\n        {\n          recommendations: newRecommendations,\n          mylist: [...previousState.mylist, action.movie]\n        }\n      )\n    }\n\n    case REMOVE_FROM_MY_LIST: {\n      const currentMylist = previousState.mylist\n      const newMyList = []\n      currentMylist.forEach(eachMovie => {\n        if (eachMovie.id !== action.movie.id) {\n          newMyList.push(eachMovie)\n        }\n      })\n\n      return Object.assign({},\n        previousState,\n        {\n          recommendations: [...previousState.recommendations, action.movie],\n          mylist: newMyList\n        }\n      )\n    }\n\n    default:\n      return previousState\n  }\n}\n\nexport default moviesReducer\n"]},"metadata":{},"sourceType":"module"}